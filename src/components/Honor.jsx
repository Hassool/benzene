'use client'

import { useState } from 'react'
import { Heart, Star, BookOpen, Award, Send } from 'lucide-react'


const defaultColors = [
  'hsl(145, 80%, 44%)', 
  '#3b82f6', 
  '#8b5cf6', 
  '#ec4899', 
  '#f97316', 
  '#ef4444', 
  '#14b8a6', 
]



export default function Honor({isYacine}) {

  const [cards, setCards] = useState(autoGeneratedCards)
  const [formData, setFormData] = useState({
    name: '',
    message: '',
    borderColor: 'hsl(145, 80%, 44%)',
    image: ''
  })
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [isUploading, setIsUploading] = useState(false)

  const CLOUDINARY_CLOUD_NAME = process.env.NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET
  const CLOUDINARY_UPLOAD_PRESET = process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME

  const handleSubmit = async (e) => {
    e.preventDefault()
    setIsSubmitting(true)

    // Simulate form submission
    await new Promise(resolve => setTimeout(resolve, 1000))

    const newCard = {
      id: Date.now().toString(),
      name: formData.name || 'Anonymous',
      message: formData.message,
      borderColor: formData.borderColor,
      image: formData.image
    }

    setCards(prev => [...prev, newCard])
    setFormData({ name: '', message: '', borderColor: 'hsl(145, 80%, 44%)', image: '' })
    setIsSubmitting(false)
  }

  const handleInputChange = (e) => {
    setFormData(prev => ({
      ...prev,
      [e.target.name]: e.target.value
    }))
  }

  const handleImageUpload = async (e) => {
    const file = e.target.files[0]
    if (!file) return

    setIsUploading(true)

    try {
      const formData = new FormData()
      formData.append('file', file)
      formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET)

      const response = await fetch(
        `https://api.cloudinary.com/v1_1/${CLOUDINARY_CLOUD_NAME}/image/upload`,
        {
          method: 'POST',
          body: formData
        }
      )

      const data = await response.json()
      
      if (data.secure_url) {
        setFormData(prev => ({
          ...prev,
          image: data.secure_url
        }))
      }
    } catch (error) {
      console.error('Upload failed:', error)
      alert('Image upload failed. Please try again.')
    } finally {
      setIsUploading(false)
    }
  }

  return (
    <div className="min-h-screen bg-gradient-light dark:bg-gradient-dark">
      <div className="max-w-6xl mx-auto px-4 py-8">
        
        {/* Header Section */}
        <div className="text-center mb-12">
          <div className="flex justify-center items-center gap-4 mb-6">
            <Award className="w-12 h-12 text-special" />
            <h1 className="text-5xl font-montserrat font-bold text-text dark:text-text-dark">
              Honoring Mrs. Johnson
            </h1>
            <Star className="w-12 h-12 text-special" />
          </div>
          <p className="text-xl text-text-secondary dark:text-text-dark-secondary font-inter">
            A celebration of an inspiring educator who touches hearts and changes lives
          </p>
        </div>

        {/* Personal Message Section */}
        <div className="bg-bg-secondary dark:bg-bg-dark-secondary rounded-2xl p-8 mb-12 border-l-8 border-special shadow-lg">
          <div className="flex items-start gap-4">
            <Heart className="w-8 h-8 text-special flex-shrink-0 mt-1" />
            <div>
              <h2 className="text-2xl font-montserrat font-semibold text-text dark:text-text-dark mb-4">
                A Message from Your Student
              </h2>
              <p className="text-lg text-text dark:text-text-dark font-inter leading-relaxed">
                Dear Mrs. Johnson, words cannot express how grateful I am for the impact you've had on my life. 
                Your passion for teaching, your patience with every question, and your ability to make complex concepts 
                feel simple and exciting has inspired me to create this education platform. You didn't just teach me 
                subjects; you taught me how to think, how to question, and most importantly, how to never stop learning. 
                This platform exists because of educators like you who believe in their students' potential and nurture 
                their growth. Thank you for being not just a teacher, but a true mentor and inspiration.
              </p>
              <p className="text-right mt-6 text-text-secondary dark:text-text-dark-secondary font-inter italic">
                â€” With endless gratitude, Your Student
              </p>
            </div>
          </div>
        </div>

        {/* Rope Decoration */}
        <div className="flex justify-center mb-8">
          <div className="w-full max-w-4xl h-6 bg-gradient-to-r from-amber-800 to-amber-900 rounded-full shadow-md relative">
            <div className="absolute inset-0 bg-gradient-to-r from-amber-700 to-amber-800 rounded-full transform rotate-1"></div>
            <div className="absolute inset-0 bg-gradient-to-r from-amber-800 to-amber-900 rounded-full"></div>
          </div>
        </div>

        {/* Thank You Cards */}
        <div className="mb-12">
          <h2 className="text-3xl font-montserrat font-bold text-center text-text dark:text-text-dark mb-8 flex items-center justify-center gap-3">
            <BookOpen className="w-8 h-8 text-special" />
            Letters of Gratitude
          </h2>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 justify-items-center">
            {cards.map((card, index) => (
              <div
                key={card.id}
                className={`bg-bg dark:bg-bg-dark rounded-xl p-6 shadow-lg transform hover:scale-105 transition-all duration-300 border-t-8 hover:shadow-xl animate-pulse ${
                  card.image 
                    ? 'col-span-1 md:col-span-2 lg:col-span-2 xl:col-span-2 w-full max-w-2xl' 
                    : 'w-full max-w-sm'
                }`}
                style={{
                  animationDelay: `${index * 0.2}s`,
                  animationDuration: '3s',
                  animationIterationCount: '1',
                  animationFillMode: 'forwards',
                  borderTopColor: card.borderColor
                }}
              >
                {card.image ? (
                  // Layout for cards with images - horizontal on large screens, vertical on small
                  <div className="flex flex-col sm:flex-row gap-6 items-center">
                    <div className="flex-shrink-0">
                      <div className="w-32 h-32 sm:w-40 sm:h-40 rounded-full overflow-hidden border-4 border-border dark:border-border-dark">
                        <img src={card.image} alt="Student" className="w-full h-full object-cover" />
                      </div>
                    </div>
                    <div className="flex-1 text-center sm:text-left">
                      <p className="text-text dark:text-text-dark font-inter leading-relaxed mb-4 text-lg">
                        "{card.message}"
                      </p>
                      <p className="text-text-secondary dark:text-text-dark-secondary font-montserrat font-semibold">
                        â€” {card.name}
                      </p>
                    </div>
                  </div>
                ) : (
                  // Layout for cards without images - standard vertical layout
                  <div className="text-center">
                    <p className="text-text dark:text-text-dark font-inter leading-relaxed mb-4">
                      "{card.message}"
                    </p>
                    <p className="text-text-secondary dark:text-text-dark-secondary font-montserrat font-semibold">
                      â€” {card.name}
                    </p>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>

        {/* Add Your Letter Form (only for Yacine) */}
        {isYacine && (
          <div className="bg-bg dark:bg-bg-dark rounded-2xl p-8 shadow-lg border border-border dark:border-border-dark">
            <h2 className="text-3xl font-montserrat font-bold text-center text-text dark:text-text-dark mb-8 flex items-center justify-center gap-3">
              <Send className="w-8 h-8 text-special" />
              Share Your Gratitude
            </h2>

            <form onSubmit={handleSubmit} className="space-y-6 max-w-2xl mx-auto">
              {/* ... keep your form fields here exactly as you had them */}
            </form>
          </div>
        )}

        {/* Footer */}
        <div className="text-center mt-12 py-8 border-t border-border dark:border-border-dark">
          <p className="text-text-secondary dark:text-text-dark-secondary font-inter">
            Thank you for celebrating amazing educators who inspire us all ðŸŒŸ
          </p>
        </div>
      </div>
    </div>
  )
}